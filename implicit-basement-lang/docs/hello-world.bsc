;; -------------------------------------------------------------------------- ;;
;;   A simple print program in "basement-lang" v0.5.2 (pre-alpha)             ;;
;; -------------------------------------------------------------------------- ;;
;;   Generated code for the following pseudo-code:
;;       int32_t print(int8_t *str) {
;;           while (*str) {
;;               putc(*str);
;;               ++str;
;;           }
;;           return 0;
;;       }
;;       
;;       int32_t main() {
;;           print("Hello, World!\n");
;;           return 0;
;;       }
;; -------------------------------------------------------------------------- ;;

;; Driver code. All programs are prepended by this.
call FTBL__FUNC_MAIN    ; Call the main function.
done                    ; End the program using the return value of function
                        ; `main` as the result of the VM.


FUNC_PRINT:
    LOOP1:
        ;; While loop condition
        load64_off_fp  ARG_OFFSET__STR  ; Get the string (a pointer to char).
        load8                           ; Get the current char from the string.
        jmpz_addr      END_LOOP1        ; Jump out of the while loop if the end
                                        ; of the string (null byte) is reached.
        discard                         ; Discard the obtained char.

        ;; Print the current character the string pointer points to.
        load64_off_fp  ARG_OFFSET__STR  ; Get the string.
        load8                           ; Get the current char in the string.
        out_char                        ; Print the current char to stdout.

        ;; Go to the next character in the string.
        load64_off_fp  ARG_OFFSET__STR  ; Get the string pointer.
        add_const      INT8_SIZE        ; Increment the pointer, jumping to the
                                        ; next char.
        store64_off_fp ARG_OFFSET__STR  ; Update the string pointer.

        jump_addr      LOOP1            ; Repeat the while loop.
    END_LOOP1:
    discard    ; Discard the obtained char which should be a null byte.

    load32_const 0x0  ; Push the return value.
    return            ; Return from the function.


FUNC_MAIN:
    load64_const CONST_PTR__HELLO_WORLD_STR  ; Push the string pointer to the
                                            ; stack as a function argument to
                                            ; the function `print`.
    call        FTBL__FUNC_PRINT            ; Call the print function.
                                            ; Thhe immediate argument is an
                                            ; address that points to the
                                            ; function table element that
                                            ; corresponds to `print` function.
    discard                                 ; Discard the return value of the
                                            ; `print` function.

    load32_const  0x0  ; Push the return value.
    return             ; Return from the main function, i.e. end the program.

;; -------------------------------------------------------------------------- ;;
;;  Below this header are the literals, global entities (vars, consts) and
;;  the function table.
;;  NOTE: For the sake of this sample code, we remove their declarations.
;; -------------------------------------------------------------------------- ;;
