;; -------------------------------------------------------------------------- ;;
;;   Factorial function test. (v0.6 pre-alpha)                                ;;
;; -------------------------------------------------------------------------- ;;
;;   Pseudo-code:
;;      int64_t factorial(int32_t n) {
;;          if (n == 0 | n == 1)
;;              return 1;
;;          return factorial(n - 1) * factorial(n - 2);
;;      }
;;
;;      int32_t main() {
;;          int64_t res = factorial(3);
;;          print(res);
;;          return 0;
;;      }
;; -------------------------------------------------------------------------- ;;

;; --- Code segment --- ;;

;; Driver code
call FTBL_MAIN
done


FUNC_FACTORIAL:
    ;; Pseudo-code and its equivalent expr in RPN:
    ;;  "n == 0 | n == 1" -> (n, 0, ==, n, 1, ==, |)

    load32_off_fp  ARG_N
    load32_const   0x0
    eq
    load32_off_fp  ARG_N
    load32_const   0x1
    eq
    or
    jmpz_addr ELSE_1
        load64_const 0x1
        return
    ELSE_1:
        ;; Pseudo-code and its equivalent expr in RPN:
        ;;  "factorial(n - 1) * factorial(n - 2)"
        ;;       -> (n, 1, -, factorial, n, 2, -, factorial, *)

        load32_off_fp  ARG_N
        load32_const   0x1
        sub
        call FTBL_FACTORIAL
        load32_off_fp  ARG_N
        load32_const   0x2
        sub
        call FTBL_FACTORIAL
        mul
        return


FUNC_MAIN:
    ;; Pseudo-code and its equivalent expr in RPN:
    ;;  "int64_t res = factorial(3)"
    ;;      -> 3, factorial, LCL_VAR_RES, load64_off_fp

    load64_const 0x3
    call FTBL_FACTORIAL
    store64_off_fp LCL_VAR_RES

    ;; Print the value of res
    load64_off_fp LCL_VAR_RES
    out_num

    ;; "return 0;"
    load32_const 0x0
    return


;; --- Global constants segment --- ;;
;; (Nothing here)


;; --- Function table segment ---- ;;
FTBL_FACTORIAL:
    ;; <--- Declaration omitted. This part is generated by the compiler ---> ;;
FTBL_MAIN:
    ;; <--- Declaration omitted. This part is generated by the compiler ---> ;;