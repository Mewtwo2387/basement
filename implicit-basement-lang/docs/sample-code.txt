;; -------------------------------------------------------------------------- ;;
;;   A simple print program in "basement-lang" (temporary name) v.0.4         ;;
;; -------------------------------------------------------------------------- ;;

;; Push the call frame
LOAD_CONST 0x0           ; Reserve the return value.
LOAD_CONST STRING_ADDR   ; Load the address to the string to be printed.
LOAD_CONST 0x1           ; Load the number of arguments
CALL PRINT_FUNC          ; Call the print function
DONE                     ; Halt the VM

PRINT_FUNC:
    ;; Load the string address argument to the stack
    LOAD_FP         ; Get the frame pointer
    ADD_CONST 0x10  ; Skip the two elements on top of the stack to reach
                    ; the function argument: the string address.
                    ; NOTE:  1.) 0x10 = WORD_SIZE * 2. where WORD_SIZE = 8
                    ;        2.) Adding smth to the stack ptr decrements it
                    ;            Subtracting the stack ptr increments it
    LOAD            ; Load the value of the argument, the string address
    PRINT_LOOP:
        DUP                  ; Duplicate the top which should be string ptr
        LOAD                 ; Load the data addressed by the string ptr
        LOAD_CONST 0xFF      ; Push the byte bit mask
        AND                  ; Get only the first byte from the word
        JMPZ_ADDR EXIT_LOOP  ; Exit the print loop if 0x00 is encountered
        OUT_CHAR             ; Print the character to stdin.
        ADDI_CONST 0x1       ; Increment the string pointer by 1 byte.
        JUMP_ADDR PRINT_LOOP ; Repeat
    EXIT_LOOP:
    LOAD_CONST 0x0           ; Push the return value of the function
    RET                      ; Exit from the function.
;; End of the print function

;; <---------| CONSTANT DECLARATIONS OMITTED |--------->